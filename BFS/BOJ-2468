#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int main()
{
    int N, height=0, mx=0;
    int area[101][101];
    int dx[4] = {0,0,-1,1};
    int dy[4] = {-1,1,0,0};
    
    cin >> N;
    
    for(int i=0; i<N; i++)
    {
        for(int j=0; j<N; j++)
        {
            cin >> area[i][j];
            if(height < area[i][j])
            {
                height = area[i][j];
            }
        }
    }
    
    for(int num=0; num<=height; num++)
    {
        bool visited[101][101] = {0,};
        int cnt = 0;
        queue <pair<int,int>> q;
        
        for(int i=0; i<N; i++)
        {
            for(int j=0; j<N; j++)
            {
                if(area[i][j] <= num)
                {
                    visited[i][j] = true;
                }
            }
        }
        
        for(int i=0; i<N; i++)
        {
            for(int j=0; j<N; j++)
            {
                if(visited[i][j] == true) continue;
                
                cnt++;
                visited[i][j] = true;
                q.push({i,j});                
                while(!q.empty())
                {
                    pair<int,int> cur = q.front();
                    q.pop();
                    for(int dir=0; dir<4; dir++)
                    {
                        int curx = cur.first + dx[dir];
                        int cury = cur.second + dy[dir];
                        if(curx < 0 || cury < 0 || curx >= N || cury >= N) continue;
                        if(area[curx][cury] <= num ||visited[curx][cury] == true) continue;
                        visited[curx][cury] = true;
                        q.push({curx,cury});
                    }
                }
            }
        }
        mx = max(mx,cnt);
    }
    
    cout << mx;
    
    return 0;
}
