#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>

using namespace std;

int main()
{
    int T, M, N, K, X, Y;
    int dx[4] = {0,0,1,-1};
    int dy[4] = {1,-1,0,0};
    
    cin >> T;
    
    for(int i=0; i<T; i++)
    {
        int num = 0; // 변수, 배열 초기화 하는거 잊지말기
        int field[52][52] = {0,};
        int visited[52][52] = {0,};
        
        cin >> M >> N >> K;
        
        for(int j=0; j<K; j++)
        {
            cin >> X >> Y;
            field[X][Y] = 1;
        }
        
        for(int a=0; a<M; a++)
        {
            for(int b=0; b<N; b++)
            {
                if(visited[a][b] || field[a][b] == 0) continue;
                num++;
                visited[a][b] = true;
                queue <pair<int,int>> q;
                q.push({a,b});
                
                while(!q.empty())
                {
                    pair<int,int> cur = q.front();
                    q.pop();
                    for(int dir=0; dir<4; dir++)
                    {
                        int curx = cur.first + dx[dir];
                        int cury = cur.second + dy[dir];
                        if(curx < 0 || cury < 0 || curx >= M || cury >=N) continue;
                        if(visited[curx][cury] || field[curx][cury] != 1) continue;
                        visited[curx][cury] = true;
                        q.push({curx,cury});
                    }
                }
            }
        }
        cout << num << "\n";
    }
    return 0;
}
