#include <iostream>
#include <vector>
#include <queue>

using namespace std;

int main()
{
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    int N, M;
    int dx[4] = {1,-1,0,0};
    int dy[4] = {0,0,1,-1};
    int map[1001][1001];
    int visited[1001][1001];
    queue <pair<int,int>> q;
    
    cin >> N >> M;
    
    for(int i=0; i<N; i++)
    {
        for(int j=0; j<M; j++)
        {
            cin >> map[i][j];
            visited[i][j] = -1;
            if(map[i][j] == 2)
            {
                q.push({i,j});
                visited[i][j] = 0;
            }
        }
    }

    while(!q.empty())
    {
        pair<int,int> cur = q.front();
        q.pop();
        for(int dir=0; dir<4; dir++)
        {
            int curx = cur.first + dx[dir];
            int cury = cur.second + dy[dir];
            if(curx < 0 || cury < 0 || curx >= N || cury >= M) continue;
            if(visited[curx][cury] >= 0 || map[curx][cury] == 0) continue;
            visited[curx][cury] = visited[cur.first][cur.second] + 1;
            q.push({curx,cury});
        }
    }
    
    for(int i=0; i<N; i++)
    {
        for(int j=0; j<M; j++)
        {
            if(visited[i][j] == -1)
            {
                if(map[i][j] == 0)
                {
                    cout << 0 << " ";
                }
                else
                {
                    cout << -1 << " ";
                }
            }
            else
            {
                cout << visited[i][j] << " ";
            }
        }
        cout << "\n";
    }
    return 0;
}
